{
  "compilerOptions": {
    // 基本オプション
    "target": "esnext", /* ECMAScriptのターゲットバージョンを指定します: 'ES3'（デフォルト）, 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018'または 'ESNEXT' */
    "module": "esnext", /* モジュールコード生成: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015',または 'ESNext'を指定します。 */ //    "lib": [],                           /* デフォルトではtargetで指定されたバージョンのライブラリが利用されます。デフォルトから変更したい場合に指定します。
    "jsx": "preserve",
    "sourceMap": true, /* 対応する '.map'ファイルを生成します。 */
    "removeComments": true, /* コメントを出力しません。 */
    "noEmit": true, /* 出力を出力しません。 */
    // 厳密なチェック
    "strict": true, /* すべての厳密な型チェックオプションを有効にします。 */
    "noImplicitAny": true, /* 暗黙の 'any'型で式と宣言のエラーを発生させます。 */
    "strictNullChecks": true, /* 厳密なヌルチェックを有効にします。 */
    "noImplicitThis": true, /* 暗黙の 'any'型で 'this'式のエラーを発生させます。 */
    "allowJs": true, /* javascriptファイルをコンパイルできるようにします。 */
    "alwaysStrict": true, /* 厳密なモードで解析し,各ソースファイルに対して "use strict"を発行します。 */
    "esModuleInterop": true, /* CommonJSモジュールとESモジュール間の相互運用性を,すべてのインポート用に名前空間オブジェクトを作成することで可能にします。 「allowSyntheticDefaultImports」を暗示します。 */
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true, /* 各ファイルを個別のモジュールとしてトランスポートします（ 'ts.transpileModule'に似ています）。 */
    "moduleResolution": "node", /* モジュール解決戦略を指定する: 'node'（Node.js）または 'classic'（TypeScript pre-1.6）。 */
    "noFallthroughCasesInSwitch": true, /* switchステートメントのfallthrough caseのエラーを報告します。 */
    "noUnusedLocals": true, /* 未使用のローカルのエラーを報告します。 */
    "noUnusedParameters": true, /* 未使用のパラメータのエラーを報告します。 */
    "resolveJsonModule": true, /* JSONファイルから型の抽出・生成を行います。 */
    "skipLibCheck": true, /* 外部モジュールはチェックしない */
    "baseUrl": ".", /* 非絶対モジュール名を解決するためのベースディレクトリ。 */
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "lib": [/* デフォルトではtargetで指定されたバージョンのライブラリが利用されます。デフォルトから変更したい場合に指定します。*/
      "dom",
      "dom.iterable",
      "esnext"
    ]
  },
  "exclude": [
    "node_modules"
  ],
  "include": [
    "next-env.d.ts",
    "jest.config.js",
    "next.config.js",
    "next-env.d.ts",
    "src/**/*.ts",
    "src/**/*.tsx",
    "test/**/*.ts"
  ]
}
